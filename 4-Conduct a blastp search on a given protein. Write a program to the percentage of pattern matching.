https://colab.research.google.com/drive/1aRmlw9691w6YZvDwkLSm2gE7tLg18Bq4?usp=sharing


seq1.txt ----> MGYYRKYAAVILATLSVFLH
seq2.txt ----> MAGIFYFILFSFLFGICDAV

(single code)

def read_sequence(file_path):
    """
    Read the protein sequence from a file.
    
    Parameters:
    file_path (str): The path to the file containing the protein sequence.
    
    Returns:
    str: The protein sequence read from the file.
    """
    with open(file_path, 'r') as file:
        # Read the content of the file, remove any leading/trailing whitespaces
        return file.read().strip()

def calculate_match_percentage(seq1, seq2):
    """
    Calculate the percentage of pattern matching between two sequences.
    
    Parameters:
    seq1 (str): The first protein sequence.
    seq2 (str): The second protein sequence.
    
    Returns:
    float: The percentage of matching between the two sequences.
    """
    # Get the lengths of both sequences
    len1 = len(seq1)
    len2 = len(seq2)
    count = 0  # Initialize the counter for mismatched characters
    
    if len1 == len2:
        # If both sequences have the same length
        for i in range(len1):
            if seq1[i] != seq2[i]:
                count += 1  # Increment the count if characters do not match
        # Calculate the percentage of matching
        matching_percentage = ((len1 - count) * 100) / len1
    
    elif len1 > len2:
        # If the first sequence (seq1) is longer than the second sequence (seq2)
        for i in range(len1):
            if i < len2:
                # Compare characters up to the length of seq2
                if seq1[i] != seq2[i]:
                    count += 1
            else:
                # Count remaining characters in seq1 as mismatched
                count += 1
        # Calculate the percentage of matching
        matching_percentage = ((len1 - count) * 100) / len1

    else:
        # If the second sequence (seq2) is longer than the first sequence (seq1)
        for i in range(len2):
            if i < len1:
                # Compare characters up to the length of seq1
                if seq1[i] != seq2[i]:
                    count += 1
            else:
                # Count remaining characters in seq2 as mismatched
                count += 1
        # Calculate the percentage of matching
        matching_percentage = ((len2 - count) * 100) / len2
    
    return matching_percentage  # Return the percentage of matching

def main():
    """
    Main function to read sequences from files and calculate pattern matching percentage.
    """
    try:
        # Read sequences from files
        seq1 = read_sequence("/content/seq1.txt.txt")
        seq2 = read_sequence("/content/seq2.txt.txt")
        
        # Print sequences for user reference
        print("The first Sequence Starts here:")
        print(seq1)
        print("The second Sequence Starts here:")
        print(seq2)
        
        # Calculate and print the percentage of matching
        matching_percentage = calculate_match_percentage(seq1, seq2)
        print(f"The percentage of matching: {matching_percentage:.2f}%")
    
    except Exception as e:
        # If an error occurs, print the error message
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()



